{"version":3,"file":"polyclass.js","sources":["../src/polyclass.js"],"sourcesContent":["/**\r\n * Polyclass.js\r\n *\r\n * This file serves as a convenience tool for the class graph\r\n * and dynamic graph.\r\n */\r\n;(()=>{\r\n\r\n\r\n\r\nconst polyUnits = {}\r\nwindow.polyUnits = polyUnits\r\n/* Upon document load, process and *[polyclass] entity. Similar to process() */\r\nconst autoActivator = function(watch=document){\r\n    console.log('Monitor', watch)\r\n    watch.addEventListener('DOMContentLoaded', function(){\r\n        const targets = document.querySelectorAll('*[polyclass]');\r\n        console.log('Discovered', targets.length)\r\n        for(let target of targets){\r\n            let polyclassId = Math.random().toString(32).slice(2)\r\n            let pc = new Polyclass({target})\r\n            target.dataset.polyclassId = polyclassId\r\n            polyUnits[polyclassId] = pc;\r\n        }\r\n    }.bind(this))\r\n};\r\n\r\nautoActivator();\r\n\r\nclass PolyObject {\r\n\r\n    // constructor() {\r\n    constructor([config]=[]) {\r\n        this.units = polyUnits\r\n        console.log('me:', config)\r\n        let cg = new ClassGraph(config)\r\n        cg.generate()\r\n        this._graph = cg\r\n        if(config?.processOnLoad) {\r\n            this.processOnLoad(config.processOnLoad)\r\n        }\r\n\r\n        if(config?.target) {\r\n            this.process(config.target)\r\n        }\r\n\r\n\r\n        this.innerProxyHandler = {\r\n            reference: this\r\n            , get(target, property, receiver) {\r\n                /* polyclass.attribute or polyclass.method() was called.\r\n\r\n                handle the property target on the classgraph (the read object)\r\n                 */\r\n                let realTarget = this.reference;\r\n\r\n                if(property in realTarget) {\r\n\r\n                    if(realTarget[property].bind) {\r\n                        return realTarget[property].bind(realTarget)\r\n                    }\r\n                    return realTarget[property]\r\n                };\r\n            }\r\n\r\n            , apply(target, thisArg, argsList){\r\n                /* Called as a function, wrapping an entity as scope\r\n\r\n                    Polyclass(argsList)\r\n                    new Polyclass(argsList)\r\n                 */\r\n                console.log('innerProxyHandler apply...', argsList)\r\n                // get singleton\r\n            }\r\n        }\r\n\r\n        this.innerHead = function(entity){\r\n            /* inner head accepts a thing to manpulate*/\r\n\r\n        }\r\n\r\n        this.proxy = new Proxy(this.innerHead, this.innerProxyHandler)\r\n    }\r\n\r\n    processOnLoad(){\r\n        return this._graph.processOnLoad.apply(this._graph, arguments)\r\n    }\r\n\r\n    process(){\r\n        return this._graph.process.apply(this._graph, arguments)\r\n    }\r\n\r\n    /* insert a class selector into the graph\r\n\r\n        pc.addTree(['tom','d','harry'], function(splitObj){})\r\n    */\r\n\r\n    add(keys, callback) {\r\n        return this._graph.addTree.apply(this._graph, arguments)\r\n    }\r\n\r\n    /*Insert a deinfition with an undeclared classname directly to the tree\r\n\r\n        pc.insertReceiver(['tom','d','harry'], function(splitObj){})\r\n\r\n     */\r\n    insertReceiver(classWord, definition) {\r\n        return this._graph.addTree.apply(this._graph, arguments)\r\n    }\r\n\r\n    /* apply a class word and properties into the tree. This becomes an active\r\n    css declaration:\r\n\r\n        pc.insertClassProps('demo-box', { 'font-size': '1.5em'})\r\n\r\n        .demo-box {\r\n            font-size: 1.5em;\r\n        }\r\n     */\r\n    insertClassProps(classWord, props) {\r\n        return this._graph.insertLine.apply(this._graph, arguments)\r\n    }\r\n\r\n    /* Insert a complex definition of rules directly to the sheet.\r\n       Returns an array of changes with a `result.renderAll()` method to perform\r\n       `render()` on each returned rule.\r\n\r\n        v = pc.insertRules([\r\n            ['body',\r\n                ['background', '#333']\r\n                , ['color', '#991111']\r\n            ]\r\n        ]);\r\n\r\n        v.renderall()\r\n\r\n       Alternatively if the rule is manipulated before its used, the result can\r\n       _replace_ the existing rendered styles:\r\n\r\n           b = pc.insertRules({\r\n               body: [\r\n                   {color: '#11AA11'}\r\n                   , propInfo\r\n               ]\r\n           });\r\n\r\n           propInfo.background = '#000'\r\n           propInfo.color = 'red'\r\n           b[0].replace()\r\n     */\r\n    insertRules(complexDefinition) {\r\n        return this._graph.dcss.addStylesheetRules.apply(this._graph.dcss, arguments)\r\n    }\r\n\r\n    asString() {\r\n        return this._graph.asCSSText()\r\n    }\r\n}\r\n\r\n\r\nconst polyclassHead = function(){\r\n    console.log('new', arguments)\r\n    return polyclassProxy.newInstance.apply(polyclassProxy, arguments)\r\n};\r\n\r\n\r\nconst polyclassProxy = {\r\n    /* The handler for the main polyclass instance.\r\n\r\n    Written as a class for nicer definitions.\r\n    */\r\n    safeSpace: {\r\n        units: polyUnits\r\n    }\r\n    , get(target, property, receiver) {\r\n        /* polyclass.attribute or polyclass.method() was called.\r\n\r\n        handle the property target on the classgraph (the read object)\r\n         */\r\n        let realTarget = this.getInstance();\r\n\r\n        if(property in realTarget) {\r\n\r\n            if(realTarget[property] && realTarget[property].bind) {\r\n                return realTarget[property].bind(realTarget)\r\n            }\r\n            return realTarget[property]\r\n        };\r\n        // console.warn(`No property ${property} on receiver`, realTarget)\r\n\r\n        return this.safeSpace[property]\r\n    }\r\n\r\n    , newInstance() {\r\n        console.log('new instance', Array.from(arguments))\r\n        let r = new PolyObject(Array.from(arguments))\r\n        return r.proxy\r\n    }\r\n\r\n    , getInstance(){\r\n        if(this._instance)  {\r\n            return this._instance\r\n        }\r\n        this._instance = this.newInstance.apply(this, arguments)\r\n        return this._instance\r\n    }\r\n\r\n    , apply(target, thisArg, argsList){\r\n        /* Called as a function, wrapping an entity as scope\r\n\r\n            Polyclass(argsList)\r\n            new Polyclass(argsList)\r\n         */\r\n        console.log('Polyclass apply...', argsList)\r\n        // get singleton\r\n        return this.getInstance.apply(this, argsList)\r\n    }\r\n}\r\n\r\n\r\nwindow.Polyclass = new Proxy(polyclassHead, polyclassProxy)\r\n\r\n})();"],"names":["polyUnits","window","watch","document","console","log","addEventListener","targets","querySelectorAll","length","target","polyclassId","Math","random","toString","slice","pc","Polyclass","dataset","bind","this","autoActivator","PolyObject","constructor","config","units","cg","ClassGraph","generate","_graph","processOnLoad","process","innerProxyHandler","reference","get","property","receiver","realTarget","apply","thisArg","argsList","innerHead","entity","proxy","Proxy","arguments","add","keys","callback","addTree","insertReceiver","classWord","definition","insertClassProps","props","insertLine","insertRules","complexDefinition","dcss","addStylesheetRules","asString","asCSSText","polyclassProxy","safeSpace","getInstance","newInstance","Array","from","_instance"],"mappings":"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"}