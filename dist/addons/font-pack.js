!function(){let t;const e=function(t){values=t.values;let e=r(values),i=l(values,e);c(i).forEach((t=>document.head.appendChild(t))),n(e)},n=function(e){for(let n of Object.values(e)){let e=n.first,l=(t,e)=>e?" ":"",r=i(e.replace(/[+]/g,l));console.log("Installing Font",r),n.cleanName=r,n.definition=o(n),t.dcss.addStylesheetRules(n.definition).renderAll()}},i=function(t){return t.replace(/(^|[\s+])\S/g,(function(t){return t.toUpperCase()}))};window.toTitleCase=i;const l=function(t,e){e=e||r(t);return Object.values(e).flatMap((t=>function(t){return`family=${t.str}`}(t))).join("&")},o=function(e){let n={};for(let i of Object.values(e.tokens)){let l={"font-weight":i.int,"font-family":`'${e.cleanName}', sans-serif`},o=["font",e.first];for(let e of i.keys){let i=Object.assign({},l);e.isItal&&(i["font-style"]="italic");let r=o.concat([e.token]);n[`${t.asSelectorString(r)}, ${t.asSelectorString(r).toLowerCase()}`]=i}}return n[t.asSelectorString(["font",e.first])]={"font-family":`'${e.cleanName}', sans-serif`},n},r=function(t){let e,n=0,i={},l=/([a-zA-Z-]{0,}?)(\d+)/;for(let o in t){let r=t[o];if(0==n){i[n]={first:r,tokens:{}},e=n,n++;continue}let[s,a]=[null,null];try{let t;[t,s,a]=r.match(l),0==s.length&&(s="r")}catch{i[n]={first:r,tokens:{}},e=n,n++;continue}let c={null:function(){return{regu:1,wasNull:1}},i:function(){return{ital:1}},r:function(){return{regu:1}}},f={int:Number(a)};if(0==f.int){console.warn("Skipping zero weighted item"),n++;continue}for(let t in s){let e=c[s[t]];Object.assign(f,e())}let u=i[e]?.tokens[a]||{};Object.assign(u,f),null==u.keys&&(u.keys=new Set),u.keys.add({isItal:f.ital,token:r}),i[e].tokens[a]=u,n++}return s(i)},s=function(t){for(let e in t){let n=t[e];0!=n.first.length&&a(n)}return t},a=function(t){let e=i(t.first),n=Object.assign({},...Object.values(t.tokens)),l=null!=n.ital,o=[];l&&o.push("ital"),(l||n.regu)&&o.push("wght");let r=new Set;for(let e in t.tokens){let n=t.tokens[e],i=n.ital?1:0,o=n.int,s=l?[i]:[];s.push(o);let a=s.join(",");if(r.add(a),null!=n.regu){let t=l?[0]:[];t.push(o);let e=t.join(",");r.add(e)}}let s=Array.from(r).sort(),a=s.join(";"),c=`${e}:${o.join(",")}@${a}`;Object.assign(t,{weights:s,formatStringParts:o,titleToken:e,str:c})},c=function(t){return[u("link","preconnect",{href:"https://fonts.googleapis.com"}),u("link","preconnect",{href:"https://fonts.gstatic.com",crossorigin:""}),u("link","stylesheet",{href:`https://fonts.googleapis.com/css2?${t}&display=swap`})]};let f={};const u=function(t,e,n){let i={rel:e,href:t};Object.assign(i,n||{});let l=JSON.stringify,o=f[l(i)];return o||(f[l(i)]=g("link",i))},g=function(t,e){if(null==e&&"string"!=typeof t&&null==(t=(e=t).localName))throw Error("createNode requires a localName within a object definition");let n=document.createElement(t);for(let t in e)n.setAttribute(t,e[t]);return n};DynamicCSSStyleSheet.addons.fontPackReceiver=function(n){t=n,t.insertReceiver(["font","pack"],e)}}();
