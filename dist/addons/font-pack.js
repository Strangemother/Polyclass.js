!function(){let t;const e=function(t){values=t.values;let e=s(values),i=o(values,e);c(i).forEach((t=>document.head.appendChild(t))),n(e)},n=function(e){for(let n of Object.values(e)){let e=n.first,o=(t,e)=>e?" ":"",s=i(e.replace(/[+]/g,o));console.log("Installing Font",s),n.cleanName=s,n.definition=l(n),t.dcss.addStylesheetRules(n.definition).renderAll()}},i=function(t){return t.replace(/(^|[\s+])\S/g,(function(t){return t.toUpperCase()}))},o=function(t,e){e=e||s(t);return Object.values(e).flatMap((t=>function(t){return`family=${t.str}`}(t))).join("&")},l=function(e){let n={};const i=t.asSelectorString.bind(t);for(let t of Object.values(e.tokens)){let o={"font-weight":t.int,"font-family":`'${e.cleanName}', sans-serif`},l=["font",e.first];for(let e of t.keys){let t=Object.assign({},o);e.isItal&&(t["font-style"]="italic");let s=l.concat([e.token]);n[`${i(s)}, ${i(s).toLowerCase()}`]=t}}let o=i(["font",e.first]),l=i(["font"].concat(e.first.split("+"))),s=new Set([o,l,o.toLowerCase(),l.toLowerCase()]);return n[Array.from(s).join(", ")]={"font-family":`'${e.cleanName}', sans-serif`},n},s=function(t){let e,n=0,i={},o=/([a-zA-Z-]{0,}?)(\d+)/;for(let l in t){let s=t[l];if(0==n){i[n]={first:s,tokens:{}},e=n,n++;continue}let[r,a]=[null,null];try{let t;[t,r,a]=s.match(o),0==r.length&&(r="r")}catch{i[n]={first:s,tokens:{}},e=n,n++;continue}let c={null:function(){return{regu:1,wasNull:1}},i:function(){return{ital:1}},r:function(){return{regu:1}}},f={int:Number(a)};if(0==f.int){console.warn("Skipping zero weighted item"),n++;continue}for(let t in r){let e=c[r[t]];Object.assign(f,e())}let u=i[e]?.tokens[a]||{};Object.assign(u,f),null==u.keys&&(u.keys=new Set),u.keys.add({isItal:f.ital,token:s}),i[e].tokens[a]=u,n++}return r(i)},r=function(t){for(let e in t){let n=t[e];0!=n.first.length&&a(n)}return t},a=function(t){let e=i(t.first),n=function(t){return 0==Object.values(t.tokens).length&&(t.tokens[400]={int:400,regu:1,keys:new Set([{isItal:void 0,token:"400"}])}),Object.values(t.tokens)}(t),o=Object.assign({},...n),l=null!=o.ital,s=[],r=new Set;l&&s.push("ital"),(l||o.regu)&&s.push("wght");for(let e in t.tokens){let n=t.tokens[e],i=n.ital?1:0,o=n.int,s=l?[i]:[];s.push(o);let a=s.join(",");if(r.add(a),null!=n.regu){let t=l?[0]:[];t.push(o);let e=t.join(",");r.add(e)}}let a=Array.from(r).sort(),c=a.join(";"),f=`${e}:${s.join(",")}@${c}`;Object.assign(t,{weights:a,formatStringParts:s,titleToken:e,str:f})},c=function(t){return[u("link","preconnect",{href:"https://fonts.googleapis.com"}),u("link","preconnect",{href:"https://fonts.gstatic.com",crossorigin:""}),u("link","stylesheet",{href:`https://fonts.googleapis.com/css2?${t}&display=swap`})]};let f={};const u=function(t,e,n){let i={rel:e,href:t};Object.assign(i,n||{});let o=JSON.stringify,l=f[o(i)];return l||(f[o(i)]=g("link",i))},g=function(t,e){if(null==e&&"string"!=typeof t&&null==(t=(e=t).localName))throw Error("createNode requires a localName within a object definition");let n=document.createElement(t);for(let t in e)n.setAttribute(t,e[t]);return n};DynamicCSSStyleSheet.addons.fontPackReceiver=function(n){t=n,t.insertReceiver(["font","pack"],e)}}();
