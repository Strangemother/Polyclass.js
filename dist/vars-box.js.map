{"version":3,"file":"vars-box.js","sources":["../src/addons/vars-box.js"],"sourcesContent":["/*\r\n\r\nvars box. To assign key variables as accessible CSS varialbes through a js\r\ndefinition. The definition is bound to DCSS, so edits to the vars manipulates\r\nthe view automatically.\r\n\r\n    vars({\r\n        primary: \"#880000\" # company red\r\n        , secondary: \"#111\" # dark\r\n        , accent: \"red\"\r\n    })\r\n\r\nIn the node, we access the vars reciever\r\n\r\n    <div class=\"background-color-var-secondary\r\n                color-primary\">\r\n        <p>An elk called Elk lives here.</p>\r\n    </div>\r\n\r\nManipulating the var propagates to the view:\r\n\r\n    vars.primary = \"#EEE\" # off white\r\n\r\n---\r\n\r\n## Secondary App\r\n\r\n    `swatch()`\r\n    and colors.js\r\n\r\n    Assign \"colors\" to a swatch of colors, each color is a function from the\r\n    colors.js module and can assign math relations to swatches.\r\n    Chaning a swatch (such as its base color), can manipulate the other\r\n    colours according to the chosen swatch type, e.g. \"Diachromic\".\r\n\r\n */\r\n\r\nconst varsReceiver = (function(){\r\n\r\n    let cg;\r\n    let rootDeclaration = {};\r\n    let definition = undefined\r\n    let rootRule;\r\n\r\n    /**\r\n     * The _automatic_ function called at the base of this iffe to\r\n     * install the `font-pack-*` tokens into the class graph.\r\n     *\r\n     * @return {undefined}\r\n     */\r\n    const insertReceiver = function(){\r\n        // DynamicCSSStyleSheet.addons.varTranslateReceiver = function(_cg){\r\n            // cg = _cg;\r\n            // cg.insertReceiver(['var'], varReceiver)\r\n        // }\r\n\r\n        ClassGraph.addons.varsReceiver = function(_cg){\r\n            cg = _cg;\r\n            cg.vars = varsHook.bind(cg)\r\n            // cg.varsRootDelaration = rootDeclaration\r\n            cg.varsRoot = rootRule\r\n            // cg.insertTranslator('var', variableDigest)\r\n        }\r\n    }\r\n\r\n\r\n    const varsHook = function(d, target=':root') {\r\n        /** vars() function bound to the classgraph. _this_ is the classgraph\r\n         instance `cg.vars = varsHook.bind(cg)`\r\n\r\n         each key is a var, value is the param\r\n\r\n            {\r\n                apples: green\r\n                , foo: 10\r\n                , bar: 1em\r\n                , baz: #444\r\n            }\r\n\r\n        Each var is installed on the target node:\r\n\r\n            :root {\r\n                --apples: green\r\n                ...\r\n                --baz: #444\r\n            }\r\n\r\n        if an existing \"vars\" object exists, it's updated.\r\n\r\n        */\r\n        // target = document.querySelector(target)\r\n        console.log('Hook', d)\r\n\r\n        if(rootRule == undefined) {\r\n            let rootDeclaration = {};\r\n\r\n            for(let key in d) {\r\n                let prop = `--${key}`\r\n                let value = d[key]\r\n                rootDeclaration[prop] = value;\r\n            }\r\n\r\n            let rules = cg.dcss.addStylesheetRules({\r\n                    [target]: rootDeclaration\r\n                });\r\n\r\n            rules.renderAll()\r\n            rootRule = rules[0]\r\n            cg.varsRoot = rootRule\r\n        } else {\r\n\r\n            // rootRule\r\n            // let pr = rootRule.getPropStr([target,Object.entries(definition)])\r\n            // rootRule.sheetRule.cssText = `${target} { ${pr} }`\r\n            // rootRule.replace(`${target} { ${pr} }`)\r\n\r\n            for(let key in d) {\r\n                let prop = `--${key}`\r\n                let value = d[key]\r\n                rootRule.sheetRule.style.setProperty(prop, value)\r\n            }\r\n            // rootRule.render()\r\n            // console.log(rootRule)\r\n            // window.varsRule = rootRule\r\n        }\r\n    }\r\n\r\n    ;insertReceiver();\r\n})()\r\n"],"names":["cg","rootRule","varsHook","d","target","console","log","undefined","rootDeclaration","key","prop","value","rules","dcss","addStylesheetRules","renderAll","varsRoot","sheetRule","style","setProperty","ClassGraph","addons","varsReceiver","_cg","vars","bind"],"mappings":"CAqCqB,WAEjB,IAAIA,EAGAC,EAQJ,MAgBMC,EAAW,SAASC,EAAGC,EAAO,SA2BhC,GAFAC,QAAQC,IAAI,OAAQH,GAELI,MAAZN,EAAuB,CACtB,IAAIO,EAAkB,CAAA,EAEtB,IAAI,IAAIC,KAAON,EAAG,CACd,IAAIO,EAAO,KAAKD,IACZE,EAAQR,EAAEM,GACdD,EAAgBE,GAAQC,CAC3B,CAED,IAAIC,EAAQZ,EAAGa,KAAKC,mBAAmB,CAC/BV,CAACA,GAASI,IAGlBI,EAAMG,YACNd,EAAWW,EAAM,GACjBZ,EAAGgB,SAAWf,CAC1B,MAOY,IAAI,IAAIQ,KAAON,EAAG,CACd,IAAIO,EAAO,KAAKD,IACZE,EAAQR,EAAEM,GACdR,EAASgB,UAAUC,MAAMC,YAAYT,EAAMC,EAC9C,CAKR,EArEGS,WAAWC,OAAOC,aAAe,SAASC,GACtCvB,EAAKuB,EACLvB,EAAGwB,KAAOtB,EAASuB,KAAKzB,GAExBA,EAAGgB,SAAWf,CAEjB,CAkER,CA3FoB"}